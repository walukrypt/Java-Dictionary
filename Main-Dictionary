*****************************************************************************************************************************

abstract:
	(keyword)

*****************************************************************************************************************************

argument:

*****************************************************************************************************************************

assert:
	(keyword)

*****************************************************************************************************************************

BigInteger:

*****************************************************************************************************************************

BigDecimal:

*****************************************************************************************************************************

boolean:
	(keyword, data type)
boolean is one of eight primitive data types in Java. The boolean data type has only two possible values: true and false (null is not a boolean value).

*****************************************************************************************************************************

break:
	(keyword)
The keyword 'break' is used to terminate the nearest loop. Once the compiler encounters a break keyword, it terminates the nearest loop immediately. 'break' is also used to jump out of (break out of) switch statements.

	Example:
		for(int i = 0; i < 10; i++){
			if(i == 2){
				break;
				}

			System.out.println("Hey");
			}


If we run the example above, 'Hey' will be printed just twice (despite the fact that the for loop is set to loop 10 times) because the loop breaks when i is 2.

*****************************************************************************************************************************

byte:
	(keyword, data type)
byte is one of eight data types in Java and it indicates an 8-bit whole number. Values of type 'byte' cannot contain a decimal point. The wrapper class for the type 'byte' is Byte.

*****************************************************************************************************************************

case:
	(keyword)

*****************************************************************************************************************************

catch:
	(keyword)

*****************************************************************************************************************************

char:
	(keyword, data type)
int is one of eight data types in Java and it indicates a character (a single letter, digit or a symbol). The wrapper class for the type char is Character. When declaring a variable of type char, the value must be surrounded by single quotes.\ne.g\tchar a = 'w';

*****************************************************************************************************************************

class:
	(keyword)
A class is a blueprint of an object and it might contain one or more methods.

*****************************************************************************************************************************

const:
	(keyword)
This keyword doesn't actually have any meaning in Java. But it's still a reserved keyword anyway.

*****************************************************************************************************************************

Compile:

*****************************************************************************************************************************

continue:
	(keyword)
The keyword 'continue' is used to skip the remaining part of a loop iteration and jump to the next iteration.

	Example:
		for(int i = 0; i < 3; i++){
			if(i == 1){
			continue;
			}

			System.out.println("Hey");
			}
	
If we run the code snippet above, 'Hey' will be printed out just twice. During the second iteration (when i is 1), nothing happens, this iteration is skipped because of the 'continue' keyword.

*****************************************************************************************************************************

default:
	(keyword)

*****************************************************************************************************************************

do:
	(keyword)

*****************************************************************************************************************************

do-while:

*****************************************************************************************************************************

double:
	(keyword, data type)
double is one of eight data types in Java and it indicates a 64-bit number. Values of type 'double' are floating-point numbers and hence, can contain a decimal point. The wrapper class for the type 'double' is Double.
*****************************************************************************************************************************

else if:
	
*****************************************************************************************************************************

else:
	(keyword)

*****************************************************************************************************************************

enum:
	(keyword)
*****************************************************************************************************************************

Error:

*****************************************************************************************************************************

Exception:
	(Exception class)

*****************************************************************************************************************************

extends:
	(keyword)
The keyword 'extends' is used in class declarations to state that a class is a subclass (child) of another class and would therefore reuse some of its functionalities.
	
	EXAMPLE
		public class Earth extends Planet{
	
			}

*****************************************************************************************************************************

false:
	(keyword, boolean value)
false is one of the only two possible boolean values. Also, false could also indicate that a particular condition is NOT met.

EXAMPLE
	boolean bool = ((2 + 2) == 4);

The variable bool above is true because 2 + 2 is 4.

*****************************************************************************************************************************

final:
	(keyword)

*****************************************************************************************************************************

finally:
	(keyword)

*****************************************************************************************************************************

float:
	(keyword, data type)
float is one of eight data types in Java and it indicates a 32-bit number. Values of type 'float' are floating-point numbers and hence, can contain a decimal point. The wrapper class for the type 'float' is Float.

*****************************************************************************************************************************

for:
	(keyword)

*****************************************************************************************************************************

foreach:
	(keyword)

*****************************************************************************************************************************

goto:
	(keyword)
This keyword doesn't actually have any meaning in Java. But it's still a reserved keyword anyway.

*****************************************************************************************************************************

if:
	(keyword)
The keyword 'if' is used to start the declaration of an 'if statement'. The content of an if statement is executed if and only if its condition is satisfied.

	EXAMPLE:
		int x = 3;
		if(x == 3){
			System.out.println("x is 3");
			}

The if statement in the code snippet above is executed because the condition (x == 3) is satisfied (true). If x was 4, nothing would be printed out because the condition won't be satisfied, the entire if statement would therefore be skipped.

*****************************************************************************************************************************

implements:
	(keyword)

*****************************************************************************************************************************

import:
	(keyword)

*****************************************************************************************************************************

Inheritance:

*****************************************************************************************************************************

instanceof:
	(keyword)

*****************************************************************************************************************************

int:
	(keyword, data type)
int is one of eight data types in Java and it indicates a 32-bit whole number. Values of type 'int' cannot contain a decimal point. The wrapper class for the type 'int' is Integer.

*****************************************************************************************************************************

interface:
	(keyword)

*****************************************************************************************************************************

Iteration:

*****************************************************************************************************************************

IOException:
	(Exception class)

*****************************************************************************************************************************
Java:

*****************************************************************************************************************************

javac:
	(command)
javac is the command used to compile a java program. If a well-written Java code exists with the name Mama.java, running the command: javac Mama.java will compile the java code and store it as Mama.class.

*****************************************************************************************************************************

Label:

*****************************************************************************************************************************

long:
	(keyword, data type)
long is one of eight data types in Java and it indicates a 64-bit signed integer. Values of type 'long' cannot contain a decimal point. The wrapper class for the type 'long' is Long.

*****************************************************************************************************************************

main:
	(keyword)

*****************************************************************************************************************************

Method:

*****************************************************************************************************************************

Method Overloading:

*****************************************************************************************************************************

native:
	(keyword)

*****************************************************************************************************************************

new:
	(keyword)
The keyword 'new' is used when creating an object of an existing class. It is also used when creating arrays.
	
	EXAMPLE
		String name = new String("Homer Simpson");
		Scanner in = new Scanner(System.in);
		Apples a = new Apples();

*****************************************************************************************************************************

null:

*****************************************************************************************************************************

NullPointerException:
	(Exception class)

*****************************************************************************************************************************

Object:
	(keyword)

*****************************************************************************************************************************

package:
	(keyword)
A package is a collection of classes and other logically related definitions. Although optional, the package name should be declared in the first line of a class (before anything else).

	EXAMPLE
	package Examinations
	import java.util.*;
	public class Mathematics{
	
		}

*****************************************************************************************************************************

package-private:
	(Access-Modifier)
This is the default state of any field declared without a modifier. It means that field can be seen and accessed from any other class within the same package.

*****************************************************************************************************************************

Parameter:

*****************************************************************************************************************************
Polymorphism:

*****************************************************************************************************************************

print():
	(method)
The print() method is written as System.out.print() and it is used for displaying a set of characters on a command window. The print() method doesn't automatically generate a new line after printing out and that differentiates it from other standard output methods. The argument for the print() method is usually the variable or String to be printed out.

EXAMPLE
	(i)	System.out.print("Hello guys!");

	(ii)	int number = 4;
		System.out.print(number);

*****************************************************************************************************************************

printf():
	(method)
The printf() method is written as System.out.printf() and it is used for displaying a set of characters on a command window in a formatted way. The printf() method makes use of escape characters for formatting. These escape characters start with a backslash and a particular character. The printf() method takes two or more arguments; the first is a sequence of escape characters which define the format of the characters to be printed out. The arguments that follow represent the variables to be printed.

EXAMPLE
	String name = "Zinet";
	int age = 48;
	System.out.printf("%s is %d", name, age);

*****************************************************************************************************************************

private:
	(keyword, Access-modifier)
If a field is declared private, it means that field can be seen and accessed ONLY within its own class. Outside its class, it is totally invisible and inaccessible (even to subclasses).

*****************************************************************************************************************************

protected:
	(keyword, Access-modifier)
If a field is declared protected, it means that variable or method can be seen and accessed from its own class, its subclasses and any other class in the same package.

*****************************************************************************************************************************

println():
	(method)
The println() method is written as System.out.println() and it is used for displaying a set of characters on a command window. The println() method automatically generates a new line after printing out and that differentiates it from other standard output methods. The argument for the println() method is usually the variable or String to be printed out.

EXAMPLE
	(i)	System.out.println("Hello guys!");

	(ii)	int number = 4;
		System.out.println(number);

*****************************************************************************************************************************

public:
	(Access-modifier, keyword)
If a field is declared public, it means that field can be seen and accessed from any other class.

*****************************************************************************************************************************

return:
	(keyword)
The keyword 'return' is used to terminate a method and probably return (produce) a value. This returned value can be of any primitive or object reference type. All methods either return a value (primitive or reference) or void (nothing).

	Example
	public int add(int a, int b){
		int sum = a + b;
		return sum;
			}

*****************************************************************************************************************************

short:
	(keyword, data type)
short is one of eight data types in Java and it indicates a 16-bit whole number. Values of type 'short' cannot contain a decimal point. The wrapper class for the type 'short' is Short.

*****************************************************************************************************************************

static:
	(keyword, modifier)

*****************************************************************************************************************************

strictfp:
	(keyword)

*****************************************************************************************************************************

String:
	(keyword, data type)

*****************************************************************************************************************************

StringBuffer:
	(class)

*****************************************************************************************************************************

String-Builder:
	(class)

*****************************************************************************************************************************

super:
	(keyword)
The keyword 'super' is used by subclasses to access methods declared in a superclass. The keyword is also used to invoke the constructor of a super class.

	EXAMPLE
	public int getAmount(){
		return super.getPayment();
		}

The method above indicates that the superclass contains a method called getPayment() and the value of that method is being accessed by the getAmount() method (in the subclass).

*****************************************************************************************************************************

switch:
	(keyword)

*****************************************************************************************************************************

synchronized:
	(keyword)

*****************************************************************************************************************************

System:
	(keyword, class)

*****************************************************************************************************************************

this:
	(keyword)
The keyword 'this' is basically a self-reference keyword. Any variable or method preceeded by the keyword 'this' belongs to the current object reference.

	EXAMPLE
	public class Complicated{
		String name;
		int age;
	public Complicated(String name, int age){
		this.name = name;
		this.age = age;
			}
		}

In the example above, "this.name" refers to the name variable that was declared as a global variable (property of the class).

*****************************************************************************************************************************

throw:
	(keyword)

*****************************************************************************************************************************

throws:
	(keyword)

*****************************************************************************************************************************

transient:
	(keyword)

*****************************************************************************************************************************

true:
	(keyword, boolean value)
true is one of the only two possible boolean values. Also, true could also indicate that a particular condition is met.

EXAMPLE
	boolean bool = ((2 + 2) == 4);

The variable bool above is true because 2 + 2 is 4.

*****************************************************************************************************************************
try:
	(keyword)

*****************************************************************************************************************************

void:
	(keyword)
void is a keyword used to specify that a method doesn't return any value. By default, the main method always returns void.

	EXAMPLE
		public void incrementByOne(int a){
			a++;
			}

*****************************************************************************************************************************

volatile:
	(keyword)

*****************************************************************************************************************************

while
	(keyword)
A while loop repeats instructions over and over again as long as a particular condition is met. A while loop is often preceeded by the keyword 'while' followed by a condition (in parenthesis) and then a body of instruction(s); as long as the condition is met, the instructions will always be executed.
	
	Example:
		while(x >= 2){
			Systm.out.println("x is greater than or equal to 2");
			}
*****************************************************************************************************************************
